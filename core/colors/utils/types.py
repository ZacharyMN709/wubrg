from typing import Literal, get_args


# region Color Literals
ColorString = Literal["W", "U", "B", "R", "G"]

SplashString = Literal["w", "u", "b", "r", "g"]

ColorIdentityString = Literal[
    "",
    "W", "U", "B", "R", "G",
    "WU", "WB", "WR", "WG", "UB", "UR", "UG", "BR", "BG", "RG",
    "WUB", "WUR", "WUG", "WBR", "WBG", "WRG", "UBR", "UBG", "URG", "BRG",
    "WUBR", "WUBG", "WURG", "WBRG", "UBRG",
    "WUBRG"
]

PentadIdentityString = Literal[
    "",
    "W", "U", "B", "R", "G",
    "WU", "WB", "RW", "GW", "UB", "UR", "GU", "BR", "BG", "RG",
    "WUB", "URW", "GWU", "RWB", "WBG", "RGW", "UBR", "BGU", "GUR", "BRG",
    "WUBR", "GWUB", "RGWU", "BRGW", "UBRG",
    "WUBRG"
]

SplashIdentityString = Literal[
    "",
    "w", "u", "b", "r", "g",
    "wu", "wb", "wr", "wg", "ub", "ur", "ug", "br", "bg", "rg",
    "wub", "wur", "wug", "wbr", "wbg", "wrg", "ubr", "ubg", "urg", "brg",
    "wubr", "wubg", "wurg", "wbrg", "ubrg",
    "wubrg"
]

ColorCombinationIdentityString = Literal[
    "",
    "w", "u", "b", "r", "g",
    "wu", "wb", "wr", "wg", "ub", "ur", "ug", "br", "bg", "rg",
    "wub", "wur", "wug", "wbr", "wbg", "wrg", "ubr", "ubg", "urg", "brg",
    "wubr", "wubg", "wurg", "wbrg", "ubrg",
    "wubrg",
    "W", "Wu", "Wb", "Wr", "Wg", "Wub", "Wur", "Wug", "Wbr", "Wbg", "Wrg", "Wubr", "Wubg", "Wurg", "Wbrg", "Wubrg", 
    "U", "Uw", "Ub", "Ur", "Ug", "Uwb", "Uwr", "Uwg", "Ubr", "Ubg", "Urg", "Uwbr", "Uwbg", "Uwrg", "Ubrg", "Uwbrg", 
    "B", "Bw", "Bu", "Br", "Bg", "Bwu", "Bwr", "Bwg", "Bur", "Bug", "Brg", "Bwur", "Bwug", "Bwrg", "Burg", "Bwurg", 
    "R", "Rw", "Ru", "Rb", "Rg", "Rwu", "Rwb", "Rwg", "Rub", "Rug", "Rbg", "Rwub", "Rwug", "Rwbg", "Rubg", "Rwubg", 
    "G", "Gw", "Gu", "Gb", "Gr", "Gwu", "Gwb", "Gwr", "Gub", "Gur", "Gbr", "Gwub", "Gwur", "Gwbr", "Gubr", "Gwubr", 
    "WU", "WUb", "WUr", "WUg", "WUbr", "WUbg", "WUrg", "WUbrg", 
    "WB", "WBu", "WBr", "WBg", "WBur", "WBug", "WBrg", "WBurg", 
    "WR", "WRu", "WRb", "WRg", "WRub", "WRug", "WRbg", "WRubg", 
    "WG", "WGu", "WGb", "WGr", "WGub", "WGur", "WGbr", "WGubr", 
    "UB", "UBw", "UBr", "UBg", "UBwr", "UBwg", "UBrg", "UBwrg", 
    "UR", "URw", "URb", "URg", "URwb", "URwg", "URbg", "URwbg", 
    "UG", "UGw", "UGb", "UGr", "UGwb", "UGwr", "UGbr", "UGwbr", 
    "BR", "BRw", "BRu", "BRg", "BRwu", "BRwg", "BRug", "BRwug", 
    "BG", "BGw", "BGu", "BGr", "BGwu", "BGwr", "BGur", "BGwur", 
    "RG", "RGw", "RGu", "RGb", "RGwu", "RGwb", "RGub", "RGwub", 
    "WUB", "WUBr", "WUBg", "WUBrg", 
    "WUR", "WURb", "WURg", "WURbg", 
    "WUG", "WUGb", "WUGr", "WUGbr", 
    "WBR", "WBRu", "WBRg", "WBRug", 
    "WBG", "WBGu", "WBGr", "WBGur", 
    "WRG", "WRGu", "WRGb", "WRGub", 
    "UBR", "UBRw", "UBRg", "UBRwg", 
    "UBG", "UBGw", "UBGr", "UBGwr", 
    "URG", "URGw", "URGb", "URGwb", 
    "BRG", "BRGw", "BRGu", "BRGwu", 
    "WUBR", "WUBRg", 
    "WUBG", "WUBGr", 
    "WURG", "WURGb", 
    "WBRG", "WBRGu", 
    "UBRG", "UBRGw", 
    "WUBRG",
]

ColorAliasString = Literal[
    "C", "Colorless", "",
    "W", "White", "MonoWhite", "Ardenvale", "Auriok",
    "U", "Blue", "MonoBlue", "Vantress", "Neurok",
    "B", "Black", "MonoBlack", "Locthwain", "Moriok",
    "R", "Red", "MonoRed", "Embereth", "Vulshok",
    "G", "Green", "MonoGreen", "Garenbrig", "Sylvok",
    "WU", "Azorius", "Ojutai",
    "WB", "Orzhov", "Silverquill",
    "WR", "Boros", "Lorehold",
    "WG", "Selesnya", "Dromoka",
    "UB", "Dimir", "Silumgar",
    "UR", "Izzet", "Prismari",
    "UG", "Simic", "Quandrix",
    "BR", "Rakdos", "Kolaghan",
    "BG", "Golgari", "Witherbloom",
    "RG", "Gruul", "Atarka",
    "WUB", "Esper", "Obscura",
    "WUR", "Jeskai", "Raugrin", "Numot", "Raka",
    "WUG", "Bant", "Brokers",
    "WBR", "Mardu", "Savai", "Oros", "Dega",
    "WBG", "Abzan", "Indatha", "Teneb", "Necra",
    "WRG", "Naya", "Cabaretti",
    "UBR", "Grixis", "Maestros",
    "UBG", "Sultai", "Zagoth", "Vorosh", "Ana",
    "URG", "Temur", "Ketria", "Intet", "Ceta",
    "BRG", "Jund", "Riveteers",
    "WUBR", "Yore", "Artifice", "NonG",
    "WUBG", "Witch", "Growth", "NonR",
    "WURG", "Ink", "Altruism", "NonB",
    "WBRG", "Dune", "Aggression", "NonU",
    "UBRG", "Glint", "Chaos", "NonW",
    "WUBRG", "FiveColor", "All"
]

ColorIdentityScrambledString = Literal[
    "",
    "W", "U", "B", "R", "G",
    "WU", "WB", "WR", "WG",
    "UW", "UB", "UR", "UG",
    "BW", "BU", "BR", "BG",
    "RW", "RU", "RB", "RG",
    "GW", "GU", "GB", "GR",
    "WUB", "WUR", "WUG",
    "WBU", "WBR", "WBG",
    "WRU", "WRB", "WRG",
    "WGU", "WGB", "WGR",
    "UWB", "UWR", "UWG",
    "UBW", "UBR", "UBG",
    "URW", "URB", "URG",
    "UGW", "UGB", "UGR",
    "BWU", "BWR", "BWG",
    "BUW", "BUR", "BUG",
    "BRW", "BRU", "BRG",
    "BGW", "BGU", "BGR",
    "RWU", "RWB", "RWG",
    "RUW", "RUB", "RUG",
    "RBW", "RBU", "RBG",
    "RGW", "RGU", "RGB",
    "GWU", "GWB", "GWR",
    "GUW", "GUB", "GUR",
    "GBW", "GBU", "GBR",
    "GRW", "GRU", "GRB",
    "WUBR", "WUBG", "WURB", "WURG", "WUGB", "WUGR",
    "WBUR", "WBUG", "WBRU", "WBRG", "WBGU", "WBGR",
    "WRUB", "WRUG", "WRBU", "WRBG", "WRGU", "WRGB",
    "WGUB", "WGUR", "WGBU", "WGBR", "WGRU", "WGRB",
    "UWBR", "UWBG", "UWRB", "UWRG", "UWGB", "UWGR",
    "UBWR", "UBWG", "UBRW", "UBRG", "UBGW", "UBGR",
    "URWB", "URWG", "URBW", "URBG", "URGW", "URGB",
    "UGWB", "UGWR", "UGBW", "UGBR", "UGRW", "UGRB",
    "BWUR", "BWUG", "BWRU", "BWRG", "BWGU", "BWGR",
    "BUWR", "BUWG", "BURW", "BURG", "BUGW", "BUGR",
    "BRWU", "BRWG", "BRUW", "BRUG", "BRGW", "BRGU",
    "BGWU", "BGWR", "BGUW", "BGUR", "BGRW", "BGRU",
    "RWUB", "RWUG", "RWBU", "RWBG", "RWGU", "RWGB",
    "RUWB", "RUWG", "RUBW", "RUBG", "RUGW", "RUGB",
    "RBWU", "RBWG", "RBUW", "RBUG", "RBGW", "RBGU",
    "RGWU", "RGWB", "RGUW", "RGUB", "RGBW", "RGBU",
    "GWUB", "GWUR", "GWBU", "GWBR", "GWRU", "GWRB",
    "GUWB", "GUWR", "GUBW", "GUBR", "GURW", "GURB",
    "GBWU", "GBWR", "GBUW", "GBUR", "GBRW", "GBRU",
    "GRWU", "GRWB", "GRUW", "GRUB", "GRBW", "GRBU",
    "WUBRG", "WUBGR", "WURBG", "WURGB", "WUGBR", "WUGRB",
    "WBURG", "WBUGR", "WBRUG", "WBRGU", "WBGUR", "WBGRU",
    "WRUBG", "WRUGB", "WRBUG", "WRBGU", "WRGUB", "WRGBU",
    "WGUBR", "WGURB", "WGBUR", "WGBRU", "WGRUB", "WGRBU",
    "UWBRG", "UWBGR", "UWRBG", "UWRGB", "UWGBR", "UWGRB",
    "UBWRG", "UBWGR", "UBRWG", "UBRGW", "UBGWR", "UBGRW",
    "URWBG", "URWGB", "URBWG", "URBGW", "URGWB", "URGBW",
    "UGWBR", "UGWRB", "UGBWR", "UGBRW", "UGRWB", "UGRBW",
    "BWURG", "BWUGR", "BWRUG", "BWRGU", "BWGUR", "BWGRU",
    "BUWRG", "BUWGR", "BURWG", "BURGW", "BUGWR", "BUGRW",
    "BRWUG", "BRWGU", "BRUWG", "BRUGW", "BRGWU", "BRGUW",
    "BGWUR", "BGWRU", "BGUWR", "BGURW", "BGRWU", "BGRUW",
    "RWUBG", "RWUGB", "RWBUG", "RWBGU", "RWGUB", "RWGBU",
    "RUWBG", "RUWGB", "RUBWG", "RUBGW", "RUGWB", "RUGBW",
    "RBWUG", "RBWGU", "RBUWG", "RBUGW", "RBGWU", "RBGUW",
    "RGWUB", "RGWBU", "RGUWB", "RGUBW", "RGBWU", "RGBUW",
    "GWUBR", "GWURB", "GWBUR", "GWBRU", "GWRUB", "GWRBU",
    "GUWBR", "GUWRB", "GUBWR", "GUBRW", "GURWB", "GURBW",
    "GBWUR", "GBWRU", "GBUWR", "GBURW", "GBRWU", "GBRUW",
    "GRWUB", "GRWBU", "GRUWB", "GRUBW", "GRBWU", "GRBUW"
]

SplashIdentityScrambledString = Literal[
    "",
    "w", "u", "b", "r", "g",
    "wu", "wb", "wr", "wg",
    "uw", "ub", "ur", "ug",
    "bw", "bu", "br", "bg",
    "rw", "ru", "rb", "rg",
    "gw", "gu", "gb", "gr",
    "wub", "wur", "wug",
    "wbu", "wbr", "wbg",
    "wru", "wrb", "wrg",
    "wgu", "wgb", "wgr",
    "uwb", "uwr", "uwg",
    "ubw", "ubr", "ubg",
    "urw", "urb", "urg",
    "ugw", "ugb", "ugr",
    "bwu", "bwr", "bwg",
    "buw", "bur", "bug",
    "brw", "bru", "brg",
    "bgw", "bgu", "bgr",
    "rwu", "rwb", "rwg",
    "ruw", "rub", "rug",
    "rbw", "rbu", "rbg",
    "rgw", "rgu", "rgb",
    "gwu", "gwb", "gwr",
    "guw", "gub", "gur",
    "gbw", "gbu", "gbr",
    "grw", "gru", "grb",
    "wubr", "wubg", "wurb", "wurg", "wugb", "wugr",
    "wbur", "wbug", "wbru", "wbrg", "wbgu", "wbgr",
    "wrub", "wrug", "wrbu", "wrbg", "wrgu", "wrgb",
    "wgub", "wgur", "wgbu", "wgbr", "wgru", "wgrb",
    "uwbr", "uwbg", "uwrb", "uwrg", "uwgb", "uwgr",
    "ubwr", "ubwg", "ubrw", "ubrg", "ubgw", "ubgr",
    "urwb", "urwg", "urbw", "urbg", "urgw", "urgb",
    "ugwb", "ugwr", "ugbw", "ugbr", "ugrw", "ugrb",
    "bwur", "bwug", "bwru", "bwrg", "bwgu", "bwgr",
    "buwr", "buwg", "burw", "burg", "bugw", "bugr",
    "brwu", "brwg", "bruw", "brug", "brgw", "brgu",
    "bgwu", "bgwr", "bguw", "bgur", "bgrw", "bgru",
    "rwub", "rwug", "rwbu", "rwbg", "rwgu", "rwgb",
    "ruwb", "ruwg", "rubw", "rubg", "rugw", "rugb",
    "rbwu", "rbwg", "rbuw", "rbug", "rbgw", "rbgu",
    "rgwu", "rgwb", "rguw", "rgub", "rgbw", "rgbu",
    "gwub", "gwur", "gwbu", "gwbr", "gwru", "gwrb",
    "guwb", "guwr", "gubw", "gubr", "gurw", "gurb",
    "gbwu", "gbwr", "gbuw", "gbur", "gbrw", "gbru",
    "grwu", "grwb", "gruw", "grub", "grbw", "grbu",
    "wubrg", "wubgr", "wurbg", "wurgb", "wugbr", "wugrb",
    "wburg", "wbugr", "wbrug", "wbrgu", "wbgur", "wbgru",
    "wrubg", "wrugb", "wrbug", "wrbgu", "wrgub", "wrgbu",
    "wgubr", "wgurb", "wgbur", "wgbru", "wgrub", "wgrbu",
    "uwbrg", "uwbgr", "uwrbg", "uwrgb", "uwgbr", "uwgrb",
    "ubwrg", "ubwgr", "ubrwg", "ubrgw", "ubgwr", "ubgrw",
    "urwbg", "urwgb", "urbwg", "urbgw", "urgwb", "urgbw",
    "ugwbr", "ugwrb", "ugbwr", "ugbrw", "ugrwb", "ugrbw",
    "bwurg", "bwugr", "bwrug", "bwrgu", "bwgur", "bwgru",
    "buwrg", "buwgr", "burwg", "burgw", "bugwr", "bugrw",
    "brwug", "brwgu", "bruwg", "brugw", "brgwu", "brguw",
    "bgwur", "bgwru", "bguwr", "bgurw", "bgrwu", "bgruw",
    "rwubg", "rwugb", "rwbug", "rwbgu", "rwgub", "rwgbu",
    "ruwbg", "ruwgb", "rubwg", "rubgw", "rugwb", "rugbw",
    "rbwug", "rbwgu", "rbuwg", "rbugw", "rbgwu", "rbguw",
    "rgwub", "rgwbu", "rguwb", "rgubw", "rgbwu", "rgbuw",
    "gwubr", "gwurb", "gwbur", "gwbru", "gwrub", "gwrbu",
    "guwbr", "guwrb", "gubwr", "gubrw", "gurwb", "gurbw",
    "gbwur", "gbwru", "gbuwr", "gburw", "gbrwu", "gbruw",
    "grwub", "grwbu", "gruwb", "grubw", "grbwu", "grbuw"
]
# endregion Color Literals

# region Color Sets
WUBRG: ColorIdentityString = "WUBRG"

COLORS: tuple[ColorString, ...] = get_args(ColorString)
SPLASHES: tuple[SplashString, ...] = get_args(SplashString)
COLOR_IDENTITIES: tuple[ColorIdentityString, ...] = get_args(ColorIdentityString)
PENTAD_STRING: tuple[PentadIdentityString, ...] = get_args(PentadIdentityString)
SPLASH_IDENTITIES: tuple[SplashIdentityString, ...] = get_args(SplashIdentityString)
COLOR_COMBINATION_IDENTITIES: tuple[ColorCombinationIdentityString, ...] = get_args(ColorCombinationIdentityString)
COLOR_ALIASES: tuple[ColorAliasString, ...] = get_args(ColorAliasString)
COLOR_IDENTITIES_SCRAMBLED: tuple[ColorIdentityScrambledString, ...] = get_args(ColorIdentityScrambledString)
SPLASH_IDENTITY_SCRAMBLED: tuple[SplashIdentityScrambledString, ...] = get_args(SplashIdentityScrambledString)
# endregion Color Sets
